---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out converted.yaml
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
    - name: "9093"
      port: 9093
      targetPort: 9093
  selector:
    io.kompose.service: kafka

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out converted.yaml
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: kafka-ui
  name: kafka-ui
spec:
  type: NodePort
  ports:
    - name: "29092"
      port: 29092
      targetPort: 8080
      nodePort: 30007
  selector:
    io.kompose.service: kafka-ui

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out converted.yaml
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: zookeeper
  name: zookeeper
spec:
  ports:
    - name: "2181"
      port: 2181
      targetPort: 2181
  selector:
    io.kompose.service: zookeeper

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out converted.yaml
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --out converted.yaml
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: kafka
    spec:
      containers:
        - env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092,INTERNAL://kafka:9093
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: INTERNAL
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:9093
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
          image: bitnami/kafka:latest
          name: kafka
          ports:
            - containerPort: 9092
              hostPort: 9092
              protocol: TCP
            - containerPort: 9093
              hostPort: 9093
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out converted.yaml
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: kafka-ui
  name: kafka-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka-ui
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --out converted.yaml
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: kafka-ui
    spec:
      containers:
        - env:
            - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
              value: kafka:9093
            - name: KAFKA_CLUSTERS_0_NAME
              value: kafka
            - name: KAFKA_CLUSTERS_0_ZOOKEEPER
              value: zookeeper:2181
          image: provectuslabs/kafka-ui
          name: kafka-ui
          ports:
            - containerPort: 8080
              hostPort: 29092
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out converted.yaml
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zookeeper
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --out converted.yaml
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: zookeeper
    spec:
      containers:
        - env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
          image: bitnami/zookeeper:latest
          name: zookeeper
          ports:
            - containerPort: 2181
              hostPort: 2181
              protocol: TCP
      restartPolicy: Always

